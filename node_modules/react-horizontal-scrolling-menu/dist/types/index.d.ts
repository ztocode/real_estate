import React from 'react';
import './styles.css';
import { publicApiType } from './createApi';
import { observerOptions as defaultObserverOptions } from './settings';
import * as constants from './constants';
import { VisibilityContext } from './context';
import type { ItemType } from './types';
import slidingWindow from './slidingWindow';
import getItemsPos from './getItemsPos';
declare type ArrowType = React.FC | React.ReactNode;
export interface Props {
    LeftArrow?: ArrowType;
    RightArrow?: ArrowType;
    children: ItemType | ItemType[];
    onInit?: (api: publicApiType) => void;
    onUpdate?: (api: publicApiType) => void;
    onScroll?: (api: publicApiType, ev: React.UIEvent) => void;
    onWheel?: (api: publicApiType, ev: React.WheelEvent) => void;
    options?: Partial<typeof defaultObserverOptions>;
    onMouseDown?: (arg0: publicApiType) => React.MouseEventHandler;
    onMouseUp?: (arg0: publicApiType) => React.MouseEventHandler;
    onMouseMove?: (arg0: publicApiType) => React.MouseEventHandler;
    itemClassName?: string;
    separatorClassName?: string;
    scrollContainerClassName?: string;
    wrapperClassName?: string;
}
declare function ScrollMenu({ LeftArrow: _LeftArrow, RightArrow: _RightArrow, children, onInit, onUpdate, onMouseDown, onMouseUp, onMouseMove, onScroll, onWheel, options, scrollContainerClassName, itemClassName, separatorClassName, wrapperClassName, }: Props): JSX.Element;
export { constants, getItemsPos, slidingWindow, ScrollMenu, VisibilityContext };
